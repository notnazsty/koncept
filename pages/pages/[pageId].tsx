import type { NextPage } from "next";
import Head from "next/head";
import { Page } from "../../models/pages";
import { uuid } from "uuidv4";
import {
  AppShell,
  Box,
  Container,
  Navbar,
  Text,
  Textarea,
} from "@mantine/core";
import { IconChevronsLeft, IconChevronsRight } from "@tabler/icons";
import { ChangeEvent, useEffect, useMemo, useReducer, useState } from "react";
import { pageReducer } from "../../utils/reducers/pageReducer";
import BlockDisplay from "../../components/Blocks/BlockDisplay";
import { defaultTextBlock } from "../../utils/defaultBlocks";

const KonceptPage: NextPage = () => {
  // Temp Sample Data
  const samplePage: Page = {
    pageId: uuid(),
    name: "Example",
    icon: "?",
    createdAt: new Date(),
    lastEditedAt: new Date(),
    blocks: [],
  };

  // Pull Data From DB In The Future
  // Need A More Complex Reducer State & Actions When Loading Data From DB
  const [state, dispatch] = useReducer(pageReducer, samplePage);

  const [displayNavbar, setDisplayNavbar] = useState(true);

  // Add A Blank Text Block If No Blocks In Page
  useEffect(() => {
    if (state.blocks.length === 0) {
      dispatch({ type: "addBlock", block: defaultTextBlock, index: 0 });
      console.log(state.blocks.length);
    }  }, [state.blocks.length]);

  return (
    <div>
      <Head>
        <title>{state.name ? state.name : "Loading..."}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppShell
        padding="md"
        navbar={
          <Navbar
            width={
              displayNavbar ? { base: 120, sm: 180, md: 240 } : { base: 36 }
            }
            height={"100vh"}
            p="xs"
          >
            <Box
              sx={{ display: "flex", justifyContent: "right", width: "100%" }}
            >
              {displayNavbar ? (
                <IconChevronsLeft
                  style={{ cursor: "pointer" }}
                  onClick={() => setDisplayNavbar(!displayNavbar)}
                />
              ) : (
                <IconChevronsRight
                  style={{ cursor: "pointer" }}
                  onClick={() => setDisplayNavbar(!displayNavbar)}
                />
              )}
            </Box>
            {displayNavbar && <Text> Stuff Goes Here</Text>}
          </Navbar>
        }
      >
        <Container>
          {/* Main Content */}

          <Textarea
            autosize
            variant="unstyled"
            value={state.name}
            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => {
              dispatch({ type: "changeName", newName: e.target.value });
            }}
            styles={{
              input: { fontSize: 32, fontWeight: "bold", color: "gray" },
            }}
          />

          <BlockDisplay
            dispatch={dispatch}
            blocks={state.blocks}
            pageData={state}
          />
        </Container>
      </AppShell>
    </div>
  );
};

export default KonceptPage;
